/*! @page tune_cache Cache configuration

@section cache_basic Cache configuration

The WiredTiger cache implements an approximation of a least recently used
algorithm. The size of the cache is the single most important tuning knob
for a WiredTiger application.  Ideally the cache should be configured to
be large enough to hold an application's working set.

The WiredTiger cache size can be configured when first opening a database via
@ref wiredtiger_open or changed after open using the
WT_CONNECTION::reconfigure method.

@section tuning_cache_size Cache size

The cache size for the database is configurable by setting the \c cache_size
configuration string when calling the ::wiredtiger_open function.

The effectiveness of the cache can be measured by reviewing the page eviction
statistics for the database.

An example of setting a cache size to 500MB:

@snippet ex_config.c configure cache size

@section tuning_cache_resident Cache resident objects

Cache resident objects (objects never considered for the purposes of
cache eviction), can be configured with the WT_SESSION::create
"cache_resident" configuration string.

Configuring a cache resident object has two effects: first, once the
object's pages have been instantiated in memory, no further I/O cost is
ever paid for object access, minimizing potential latency.  Second,
in-memory objects can be accessed faster than objects tracked for
potential eviction, and applications able to guarantee sufficient memory
that an object need never be evicted can significantly increase their
performance.

An example of configuring a cache-resident object:

@snippet ex_all.c Create a cache-resident object

@section cache_eviction Eviction configuration

WiredTiger provides several configuration options for tuning how aggressively
pages are evicted from the cache. Different values will result in better
performance depending on an application's particular workload.

In WiredTiger cache eviction is handled by a separate thread. It is possible
to configure the percentage of cache that needs to be used before the eviction
thread will attempt to find pages to free. It is also possible to configure
a target percentage which is the percentage of the cache that needs to be
free before the eviction server sleeps.

WiredTiger eviction tuning options can be configured when first opening a
database via @ref wiredtiger_open or changed after open using the
WT_CONNECTION::reconfigure method.

 */
