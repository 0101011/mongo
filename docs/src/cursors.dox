/* vim: set filetype=c.doxygen : */

/*! @page cursors Cursors

Most common operations in WiredTiger are performed using cursors.  A cursor includes:

- a position within a data source
- access to key and value fields
- encoding of fields to store in the data source
- methods to navigate around and iterate through the data

@section cursor_ranges Positioning a Cursor

- how to put a cursor where you want it
- first, last, next, prev
- position after an insert
- position after errors

@todo write text

"On failure", cursor position is undetermined.  Apps that care need to either dup the cursor, or we could offer a config string that dups on all ops for you...

@section cursor_writes Inserting and Updating

@todo describe insert, update, append, insert-overwrite

@section cursor_dups Duplicate Data Items

@todo describe duplicate data items: how to insert them, how to navigate around them, etc.

@section cursor_types Cursor Types

The following are builtin cursor types:
<table>
<tr><th>URI</th><th>Function</th></tr>
<tr><td><tt>table:[\<tablename\>]</tt></td><td>ordinary table cursor</td></tr>
<tr><td><tt>colgroup:[\<tablename\>.\<columnset\>]</tt></td><td>column group cursor</td></tr>
<tr><td><tt>index:[\<tablename\>.\<index\>]</tt></td><td>index cursor</td></tr>
<tr><td><tt>join:\<cursor1\>\&\<cursor2\>[&\<cursor3\>...]</tt></td><td>Join the contents of multiple cursors together.</td></tr>
<tr><td><tt>module:</tt></td><td>loadable modules (key=(string)name, data=(string)path)</td></tr>
<tr><td><tt>config:[table:\<tablename\>]</tt></td><td>database or table configuration</td></tr>
<tr><td><tt>cursortype:</tt></td><td>types of cursor (key=(string)prefix, data=NULL)</td></tr>
<tr><td><tt>sequence:[\<seqname\>]</tt></td><td>Sequence cursor (key=recno, data=NULL)</td></tr>
<tr><td><tt>statistics:[table:\<tablename\>]</tt></td><td>database or table statistics (key=(string)keyname, data=(string)value)</td></tr>
</table>

@section cursor_projections Projections

Cursors on tables, column groups and indices can return a subset of columns.  This is done by listing the column names in parantheses in the <code>uri</code> parameter to WT_SESSION::open_cursor.  Only the fields from the listed columns are returned by WT_CURSOR::get_key and WT_CURSOR::get_value.

This is particularly useful with index cursors, because if all columns in the projection are available in the index (including primary key columns, which are the values of the index), there is no need to access any column groups.

@section cursor_ranges Restricting the Range of a Scan

@todo explain how to do a range scan

@section cursor_examples Code Samples

The code below is taken from the complete example program @ex_ref{ex_cursor.c}.

@todo expand cursor example description

@dontinclude ex_cursor.c

@skipline open_cursor

@skipline open_cursor

@skipline open_cursor

@skipline open_cursor

 */
