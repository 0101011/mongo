/*-
 * See the file LICENSE for redistribution information.
 *
 * Copyright (c) 2008 WiredTiger Software.  All rights reserved.
 *
 * $Id$
 */

#ifndef	__WIREDTIGER_H_
#define	__WIREDTIGER_H_

#if defined(__cplusplus)
extern "C" {
#endif

/*******************************************
 * Version information
 *******************************************/
#define	WIREDTIGER_VERSION_MAJOR	@WIREDTIGER_VERSION_MAJOR@
#define	WIREDTIGER_VERSION_MINOR	@WIREDTIGER_VERSION_MINOR@
#define	WIREDTIGER_VERSION_PATCH	@WIREDTIGER_VERSION_PATCH@
#define	WIREDTIGER_VERSION_STRING	@WIREDTIGER_VERSION_STRING@

/*******************************************
 * Required includes
 *******************************************/
@wiredtiger_includes_decl@

/*******************************************
 * Portable type names
 *******************************************/
@int8_decl@
@u_int8_decl@
@int16_decl@
@u_int16_decl@
@int32_decl@
@u_int32_decl@
@int64_decl@
@u_int64_decl@
@uintmax_t_decl@
@uintptr_t_decl@

/*******************************************
 * Forward declarations
 *******************************************/
struct __db;			typedef struct __db DB;
struct __dbc;			typedef struct __dbc DBC;
struct __dbt;			typedef struct __dbt DBT;
struct __env;			typedef struct __env ENV;
struct __idb;			typedef struct __idb IDB;
struct __idbc;			typedef struct __idbc IDBC;
struct __ienv;			typedef struct __ienv IENV;
struct __wt_stats;		typedef struct __wt_stats WT_STATS;

/*******************************************
 * Exported types
 *******************************************/
typedef u_int64_t wt_recno_t;		/* logical record numbers */

/*******************************************
 * Key/data structure -- a Data-Base Thang
 *******************************************/
struct __dbt {
	void	*data;			/* data */
	size_t	 size;			/* data length */

	size_t	 alloc_size;		/* bytes allocated for data */

	u_int32_t flags;
};

/*******************************************
 * Database handle
 *******************************************/
struct __db {
	IDB *idb;			/* Private object */

	ENV *env;			/* Enclosing environment */
	IENV *ienv;			/* Private environment object */

	WT_STATS *stats;		/* Statistics */

	/*
	 * DO NOT EDIT: automatically built by dist/api.py.
	 * Db handle api section: BEGIN
	 */
	int (*btree_compare)(DB *, const DBT *, const DBT *);
	void (*get_btree_compare)(
	    DB *, int (**)(DB *, const DBT *, const DBT *));
	int (*set_btree_compare)(
	    DB *, int (*)(DB *, const DBT *, const DBT *));

	int btree_compare_int;
	void (*get_btree_compare_int)(
	    DB *, int *);
	int (*set_btree_compare_int)(
	    DB *, int );

	int (*dup_compare)(DB *, const DBT *, const DBT *);
	void (*get_dup_compare)(
	    DB *, int (**)(DB *, const DBT *, const DBT *));
	int (*set_dup_compare)(
	    DB *, int (*)(DB *, const DBT *, const DBT *));

	void (*errcall)(const DB *, const char *);
	void (*get_errcall)(
	    DB *, void (**)(const DB *, const char *));
	int (*set_errcall)(
	    DB *, void (*)(const DB *, const char *));

	FILE *errfile;
	void (*get_errfile)(
	    DB *, FILE **);
	int (*set_errfile)(
	    DB *, FILE *);

	const char *errpfx;
	void (*get_errpfx)(
	    DB *, const char **);
	int (*set_errpfx)(
	    DB *, const char *);

	u_int32_t pagesize;
	u_int32_t fragsize;
	u_int32_t extentsize;
	u_int32_t maxitemsize;
	void (*get_pagesize)(
	    DB *, u_int32_t *, u_int32_t *, u_int32_t *, u_int32_t *);
	int (*set_pagesize)(
	    DB *, u_int32_t , u_int32_t , u_int32_t , u_int32_t );

	int (*bulk_load)(
	    DB *, u_int32_t, int (*)(DB *, DBT **, DBT **));
	int (*close)(
	    DB *, u_int32_t);
	int (*destroy)(
	    DB *, u_int32_t);
	int (*dump)(
	    DB *, FILE *, u_int32_t);
	void (*err)(
	    DB *, int, const char *, ...);
	void (*errx)(
	    DB *, const char *, ...);
	int (*get)(
	    DB *, DBT *, DBT *, DBT *, u_int32_t);
	int (*open)(
	    DB *, const char *, mode_t, u_int32_t);
	int (*stat_clear)(
	    DB *, u_int32_t);
	int (*stat_print)(
	    DB *, FILE *, u_int32_t);
	int (*sync)(
	    DB *, u_int32_t);
	int (*verify)(
	    DB *, u_int32_t);
	/*
	 * Db handle api section: END
	 * DO NOT EDIT: automatically built by dist/api.py.
	 */

	u_int32_t flags;
};

/*******************************************
 * Cursor handle
 *******************************************/
struct __dbc {
	IDBC *idbc;			/* Private object */

	u_int32_t flags;
};

/*******************************************
 * Database environment handle
 *******************************************/
struct __env {
	IENV *ienv;			/* Private object */

	WT_STATS *stats;		/* Statistics */

	/*
	 * DO NOT EDIT: automatically built by dist/api.py.
	 * Env handle api section: BEGIN
	 */
	void (*errcall)(const ENV *, const char *);
	void (*get_errcall)(
	    ENV *, void (**)(const ENV *, const char *));
	int (*set_errcall)(
	    ENV *, void (*)(const ENV *, const char *));

	FILE *errfile;
	void (*get_errfile)(
	    ENV *, FILE **);
	int (*set_errfile)(
	    ENV *, FILE *);

	const char *errpfx;
	void (*get_errpfx)(
	    ENV *, const char **);
	int (*set_errpfx)(
	    ENV *, const char *);

	u_int32_t verbose;
	void (*get_verbose)(
	    ENV *, u_int32_t *);
	int (*set_verbose)(
	    ENV *, u_int32_t );

	u_int32_t cachesize;
	void (*get_cachesize)(
	    ENV *, u_int32_t *);
	int (*set_cachesize)(
	    ENV *, u_int32_t );

	int (*destroy)(
	    ENV *, u_int32_t);
	void (*err)(
	    ENV *, int, const char *, ...);
	void (*errx)(
	    ENV *, const char *, ...);
	/*
	 * Env handle api section: END
	 * DO NOT EDIT: automatically built by dist/api.py.
	 */

	u_int32_t flags;
};

/*******************************************
 * Prototypes.
 *******************************************/
int	 wt_db_create(DB **, ENV *, u_int32_t);
int	 wt_env_create(ENV **, u_int32_t);
char	*wt_strerror(int);

/*******************************************
 * API flags
 *******************************************/
/*
 * DO NOT EDIT: automatically built by dist/api.py.
 * API flags section: BEGIN
 */
#define	WT_CREATE					0x00000001
#define	WT_DEBUG					0x00000002
#define	WT_DUPLICATES					0x00000002
#define	WT_MAXKEY_NOTSET				0x00000002
#define	WT_MODIFIED					0x00000001
#define	WT_NO_CHECKSUM					0x00000001
#define	WT_PRINTABLES					0x00000001
#define	WT_PRIVATE_ENV					0x00000001
#define	WT_SORTED_INPUT					0x00000001
#define	WT_VERB_FILEOPS					0x00000002
#define	WT_VERB_FILEOPS_ALL				0x00000001

#define	WT_APIMASK_DB					0x00000003
#define	WT_APIMASK_DB_BULK_LOAD				0x00000003
#define	WT_APIMASK_DB_CLOSE				0x00000000
#define	WT_APIMASK_DB_DESTROY				0x00000000
#define	WT_APIMASK_DB_DUMP				0x00000003
#define	WT_APIMASK_DB_GET				0x00000000
#define	WT_APIMASK_DB_OPEN				0x00000001
#define	WT_APIMASK_DB_STAT_CLEAR			0x00000000
#define	WT_APIMASK_DB_STAT_PRINT			0x00000000
#define	WT_APIMASK_DB_SYNC				0x00000000
#define	WT_APIMASK_DB_VERIFY				0x00000000
#define	WT_APIMASK_DBT					0x00000000
#define	WT_APIMASK_ENV					0x00000000
#define	WT_APIMASK_ENV_DESTROY				0x00000000
#define	WT_APIMASK_ENV_VERBOSE				0x00000003
#define	WT_APIMASK_IDB					0x00000001
#define	WT_APIMASK_IENV					0x00000000
#define	WT_APIMASK_WT_PAGE				0x00000001
#define	WT_APIMASK_DB_FILE_READ				0x00000001
#define	WT_APIMASK_DB_FILE_WRITE			0x00000001
#define	WT_APIMASK_WT_DB_CREATE				0x00000000
#define	WT_APIMASK_WT_ENV_CREATE			0x00000000
/*
 * API flags section: END
 * DO NOT EDIT: automatically built by dist/api.py.
 */

/*******************************************
 * Error returns
 *******************************************/
/*
 * DO NOT EDIT: automatically built by dist/api_err.py.
 * Error return section: BEGIN
 */
#define	WT_ERROR	-31800
#define	WT_NOTFOUND	-31801
/*
 * Error return section: END
 * DO NOT EDIT: automatically built by dist/api_err.py.
 */

#if defined(__cplusplus)
}
#endif
#endif /* __WIREDTIGER_H_ */
