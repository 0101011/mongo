/*-
 * See the file LICENSE for redistribution information.
 *
 * Copyright (c) 2008 WiredTiger Software.  All rights reserved.
 *
 * $Id$
 */

#ifndef	__WIREDTIGER_H_
#define	__WIREDTIGER_H_

#if defined(__cplusplus)
extern "C" {
#endif

/*******************************************
 * Version information
 *******************************************/
#define	WIREDTIGER_VERSION_MAJOR	@WIREDTIGER_VERSION_MAJOR@
#define	WIREDTIGER_VERSION_MINOR	@WIREDTIGER_VERSION_MINOR@
#define	WIREDTIGER_VERSION_PATCH	@WIREDTIGER_VERSION_PATCH@
#define	WIREDTIGER_VERSION_STRING	@WIREDTIGER_VERSION_STRING@

/*******************************************
 * Required includes
 *******************************************/
@wiredtiger_includes_decl@

/*******************************************
 * Portable type names
 *******************************************/
@int8_decl@
@u_int8_decl@
@int16_decl@
@u_int16_decl@
@int32_decl@
@u_int32_decl@
@int64_decl@
@u_int64_decl@

@u_char_decl@
@u_short_decl@
@u_int_decl@
@u_long_decl@
@u_quad_decl@

@uintmax_t_decl@
@uintptr_t_decl@

/*******************************************
 * Forward declarations
 *******************************************/
struct __db;			typedef struct __db DB;
struct __dbc;			typedef struct __dbc DBC;
struct __dbt;			typedef struct __dbt DBT;
struct __env;			typedef struct __env ENV;
struct __idb;			typedef struct __idb IDB;
struct __idbc;			typedef struct __idbc IDBC;
struct __ienv;			typedef struct __ienv IENV;
struct __wt_page;		typedef struct __wt_page WT_PAGE;
struct __wt_toc;		typedef struct __wt_toc WT_TOC;

/*******************************************
 * Exported types
 *******************************************/
typedef u_int64_t wt_recno_t;		/* logical record numbers */

/*******************************************
 * Key/data structure -- a Data-Base Thang
 *******************************************/
struct __dbt {
	void	 *data;			/* returned/specified data */
	u_int32_t size;			/* returned/specified data length */

	u_int32_t data_len;		/* associated memory size */

					/* callback return */
	int (*callback)(DB *, DBT *, DBT *);
};

/*******************************************
 * Application thread-of-control information
 *******************************************/
struct __wt_toc {
	char	 *name;			/* Name */

	/*
	 * Enclosing environment, set when the WT_TOC is created (which
	 * implies that threads-of-control are confined to an environment).
	 *
	 * If NULL, the WT_TOC entry is not currently in use.
	 */
	ENV	*env;			/* Operation environment */

	DB	*db;			/* Current database */
	DBT	 key, data;		/* Returned key/data pairs */
	DBT	 scratch;		/* Temporary use by anybody */

	/* WT_TOC serialization request. */
	int (*
	    volatile serial)(WT_TOC *);	/* Serialization function */
	void	*serial_args;		/* Serialization function argument */
	int	 serial_ret;		/* Serialization function return */

	WT_PAGE	**hazard;		/* Hazard reference array */

	 u_int32_t flags;

	/*
	 * DO NOT EDIT: automatically built by dist/api.py.
	 * WT_TOC methods: BEGIN
	 */
	int (*close)(
	    WT_TOC *, u_int32_t );
	/*
	 * WT_TOC methods: END
	 * DO NOT EDIT: automatically built by dist/api.py.
	 */
};

/*******************************************
 * Database handle
 *******************************************/
struct __db {
	ENV	*env;			/* Enclosing environment */
	IDB	*idb;			/* Private object */

	void	*app_private;		/* Application-private information */

	u_int32_t flags;

	/*
	 * DO NOT EDIT: automatically built by dist/api.py.
	 * DB getter/setter variables: BEGIN
	 */
	int (*btree_compare_dup)(DB *, const DBT *, const DBT *);

	int btree_compare_int;

	int (*btree_compare)(DB *, const DBT *, const DBT *);

	u_int32_t btree_dup_offpage;

	u_int32_t intlitemsize;
	u_int32_t leafitemsize;

	u_int32_t allocsize;
	u_int32_t intlsize;
	u_int32_t leafsize;
	u_int32_t extsize;

	u_int32_t fixed_len;
	const char *dictionary;

	void (*errcall)(const DB *, const char *);

	FILE *errfile;

	const char *errpfx;
	/*
	 * DB getter/setter variables: END
	 * DO NOT EDIT: automatically built by dist/api.py.
	 */

	/*
	 * DO NOT EDIT: automatically built by dist/api.py.
	 * DB methods: BEGIN
	 */
	int (*btree_compare_dup_get)(
	    DB *, int (**)(DB *, const DBT *, const DBT *));

	int (*btree_compare_dup_set)(
	    DB *, int (*)(DB *, const DBT *, const DBT *));

	int (*btree_compare_get)(
	    DB *, int (**)(DB *, const DBT *, const DBT *));

	int (*btree_compare_int_get)(
	    DB *, int *);

	int (*btree_compare_int_set)(
	    DB *, int );

	int (*btree_compare_set)(
	    DB *, int (*)(DB *, const DBT *, const DBT *));

	int (*btree_dup_offpage_get)(
	    DB *, u_int32_t *);

	int (*btree_dup_offpage_set)(
	    DB *, u_int32_t );

	int (*btree_itemsize_get)(
	    DB *, u_int32_t *, u_int32_t *);

	int (*btree_itemsize_set)(
	    DB *, u_int32_t , u_int32_t );

	int (*btree_pagesize_get)(
	    DB *, u_int32_t *, u_int32_t *, u_int32_t *, u_int32_t *);

	int (*btree_pagesize_set)(
	    DB *, u_int32_t , u_int32_t , u_int32_t , u_int32_t );

	int (*bulk_load)(
	    DB *, u_int32_t , void (*)(const char *, u_int64_t), int (*)(DB *, DBT **, DBT **));

	int (*close)(
	    DB *, u_int32_t );

	int (*column_set)(
	    DB *, u_int32_t , const char *, u_int32_t );

	int (*del)(
	    DB *, WT_TOC *, DBT *, u_int32_t );

	int (*dump)(
	    DB *, FILE *, void (*)(const char *, u_int64_t), u_int32_t );

	void (*err)(
	    DB *, int , const char *, ...);

	int (*errcall_get)(
	    DB *, void (**)(const DB *, const char *));

	int (*errcall_set)(
	    DB *, void (*)(const DB *, const char *));

	int (*errfile_get)(
	    DB *, FILE **);

	int (*errfile_set)(
	    DB *, FILE *);

	int (*errpfx_get)(
	    DB *, const char **);

	int (*errpfx_set)(
	    DB *, const char *);

	void (*errx)(
	    DB *, const char *, ...);

	int (*get)(
	    DB *, WT_TOC *, DBT *, DBT *, DBT *, u_int32_t );

	int (*get_recno)(
	    DB *, WT_TOC *, u_int64_t , DBT *, DBT *, DBT *, u_int32_t );

	int (*huffman_set)(
	    DB *, u_int8_t const *, u_int , u_int32_t );

	int (*open)(
	    DB *, const char *, mode_t , u_int32_t );

	int (*put)(
	    DB *, WT_TOC *, DBT *, DBT *, u_int32_t );

	int (*stat_clear)(
	    DB *, u_int32_t );

	int (*stat_print)(
	    DB *, FILE *, u_int32_t );

	int (*sync)(
	    DB *, void (*)(const char *, u_int64_t), u_int32_t );

	int (*verify)(
	    DB *, void (*)(const char *, u_int64_t), u_int32_t );
	/*
	 * DB methods: END
	 * DO NOT EDIT: automatically built by dist/api.py.
	 */
};

/*******************************************
 * Cursor handle
 *******************************************/
struct __dbc {
	IDBC *idbc;			/* Private object */
};

/*******************************************
 * Database environment handle
 *******************************************/
struct __env {
	IENV	*ienv;			/* Private object */

	void	*app_private;		/* Application-private information */

	 u_int32_t flags;

	/*
	 * DO NOT EDIT: automatically built by dist/api.py.
	 * ENV getter/setter variables: BEGIN
	 */
	u_int32_t cache_hash_size;

	u_int32_t cache_size;

	void (*errcall)(const ENV *, const char *);

	FILE *errfile;

	const char *errpfx;

	u_int32_t hazard_size;

	void (*msgcall)(const ENV *, const char *);

	FILE *msgfile;

	u_int32_t toc_size;

	u_int32_t verbose;
	/*
	 * ENV getter/setter variables: END
	 * DO NOT EDIT: automatically built by dist/api.py.
	 */

	/*
	 * DO NOT EDIT: automatically built by dist/api.py.
	 * ENV methods: BEGIN
	 */
	int (*cache_hash_size_get)(
	    ENV *, u_int32_t *);

	int (*cache_hash_size_set)(
	    ENV *, u_int32_t );

	int (*cache_size_get)(
	    ENV *, u_int32_t *);

	int (*cache_size_set)(
	    ENV *, u_int32_t );

	int (*close)(
	    ENV *, u_int32_t );

	int (*db)(
	    ENV *, u_int32_t , DB **);

	void (*err)(
	    ENV *, int , const char *, ...);

	int (*errcall_get)(
	    ENV *, void (**)(const ENV *, const char *));

	int (*errcall_set)(
	    ENV *, void (*)(const ENV *, const char *));

	int (*errfile_get)(
	    ENV *, FILE **);

	int (*errfile_set)(
	    ENV *, FILE *);

	int (*errpfx_get)(
	    ENV *, const char **);

	int (*errpfx_set)(
	    ENV *, const char *);

	void (*errx)(
	    ENV *, const char *, ...);

	int (*hazard_size_get)(
	    ENV *, u_int32_t *);

	int (*hazard_size_set)(
	    ENV *, u_int32_t );

	int (*msgcall_get)(
	    ENV *, void (**)(const ENV *, const char *));

	int (*msgcall_set)(
	    ENV *, void (*)(const ENV *, const char *));

	int (*msgfile_get)(
	    ENV *, FILE **);

	int (*msgfile_set)(
	    ENV *, FILE *);

	int (*open)(
	    ENV *, const char *, mode_t , u_int32_t );

	int (*stat_clear)(
	    ENV *, u_int32_t );

	int (*stat_print)(
	    ENV *, FILE *, u_int32_t );

	int (*toc)(
	    ENV *, u_int32_t , WT_TOC **);

	int (*toc_size_get)(
	    ENV *, u_int32_t *);

	int (*toc_size_set)(
	    ENV *, u_int32_t );

	int (*verbose_get)(
	    ENV *, u_int32_t *);

	int (*verbose_set)(
	    ENV *, u_int32_t );
	/*
	 * ENV methods: END
	 * DO NOT EDIT: automatically built by dist/api.py.
	 */
};

/*******************************************
 * Prototypes.
 *******************************************/
int	 wiredtiger_env_init(ENV **, u_int32_t);
void	 wiredtiger_err_stream(FILE *);
int	 wiredtiger_simple_setup(const char *, DB **, u_int32_t, u_int32_t);
int	 wiredtiger_simple_teardown(const char *, DB *);
char	*wiredtiger_strerror(int);
char	*wiredtiger_version(int *, int *, int *);

/*******************************************
 * API flags
 *******************************************/
/*
 * DO NOT EDIT: automatically built by dist/api.py.
 * API flags section: BEGIN
 */
#define	WT_ASCII_ENGLISH				0x00000008
#define	WT_CACHE_DRAIN_WAIT				0x00000001
#define	WT_CACHE_LOCKOUT				0x00000004
#define	WT_COLUMN					0x00000004
#define	WT_CREATE					0x00000001
#define	WT_DEBUG					0x00000002
#define	WT_DUPLICATES					0x00000001
#define	WT_HUFFMAN_DATA					0x00000004
#define	WT_HUFFMAN_KEY					0x00000002
#define	WT_INITIALIZED					0x00000002
#define	WT_INSERT					0x00000001
#define	WT_MEMORY_CHECK					0x00000001
#define	WT_MODIFIED					0x00000004
#define	WT_PINNED					0x00000002
#define	WT_PRINTABLES					0x00000001
#define	WT_RDONLY					0x00000002
#define	WT_REPEAT_COMP					0x00000001
#define	WT_SERVER_RUN					0x00000002
#define	WT_SERVER_SLEEPING				0x00000001
#define	WT_TELEPHONE					0x00000001
#define	WT_UNFORMATTED					0x00000001
#define	WT_VERB_ALL					0x00000002
#define	WT_VERB_FILEOPS					0x00000001
#define	WT_WORKQ_RUN					0x00000001

#define	WT_APIMASK_BT_SEARCH_KEY_ROW			0x00000001
#define	WT_APIMASK_CACHE				0x00000003
#define	WT_APIMASK_DB_BULK_LOAD				0x00000001
#define	WT_APIMASK_DB_CLOSE				0x00000000
#define	WT_APIMASK_DB_COLUMN_SET			0x00000001
#define	WT_APIMASK_DB_DEL				0x00000000
#define	WT_APIMASK_DB_DUMP				0x00000003
#define	WT_APIMASK_DB_GET				0x00000000
#define	WT_APIMASK_DB_GET_RECNO				0x00000000
#define	WT_APIMASK_DB_HUFFMAN_SET			0x0000000f
#define	WT_APIMASK_DB_OPEN				0x00000003
#define	WT_APIMASK_DB_PUT				0x00000000
#define	WT_APIMASK_DB_STAT_CLEAR			0x00000000
#define	WT_APIMASK_DB_STAT_PRINT			0x00000000
#define	WT_APIMASK_DB_SYNC				0x00000000
#define	WT_APIMASK_DB_VERIFY				0x00000000
#define	WT_APIMASK_ENV					0x00000001
#define	WT_APIMASK_ENV_CLOSE				0x00000000
#define	WT_APIMASK_ENV_DB				0x00000000
#define	WT_APIMASK_ENV_OPEN				0x00000000
#define	WT_APIMASK_ENV_STAT_CLEAR			0x00000000
#define	WT_APIMASK_ENV_STAT_PRINT			0x00000000
#define	WT_APIMASK_ENV_TOC				0x00000000
#define	WT_APIMASK_ENV_VERBOSE_SET			0x00000003
#define	WT_APIMASK_IDB					0x00000007
#define	WT_APIMASK_IENV					0x00000007
#define	WT_APIMASK_WIREDTIGER_ENV_INIT			0x00000001
#define	WT_APIMASK_WT_PAGE				0x00000007
#define	WT_APIMASK_WT_TOC				0x00000001
#define	WT_APIMASK_WT_TOC_CLOSE				0x00000000
/*
 * API flags section: END
 * DO NOT EDIT: automatically built by dist/api.py.
 */

/*******************************************
 * Error returns
 *******************************************/
/*
 * DO NOT EDIT: automatically built by dist/api_err.py.
 * Error return section: BEGIN
 */
#define	WT_ERROR	-31800
#define	WT_NOTFOUND	-31801
#define	WT_READONLY	-31802
#define	WT_RESTART	-31803
#define	WT_TOOSMALL	-31804
/*
 * Error return section: END
 * DO NOT EDIT: automatically built by dist/api_err.py.
 */

#if defined(__cplusplus)
}
#endif
#endif /* __WIREDTIGER_H_ */
