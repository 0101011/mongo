/*! @page threads Multithreading

WT_CONNECTION handles can be shared between threads, and applications
generally only open one connection to a given database per process. All
methods on WT_CONNECTION are thread safe.

WT_SESSION and WT_CURSOR handles cannot be shared between threads:
applications should open one WT_SESSION for each thread that accesses a
database.  Applications may open multiple WT_CURSOR handles in a thread.

By default, WiredTiger configures for single-threaded access, and only a
single WT_SESSION handle may be opened at a time.  To configure WiredTiger
for multi-threaded access, specify the <code>"multithread"</code>
configuration string to the @ref wiredtiger_open function.

@todo expand

@section threads_example Code Samples

The code below is taken from the complete example program
@ex_ref{ex_thread.c}.

This is an example of a thread entry point.  A new session is opened for
the thread and used for all operations within that thread.

@dontinclude ex_thread.c
@skip WT_CONNECTION
@skip scan_thread
@until }
@until }

Here is the main function that starts the threads.  It opens a single
connection, shared between the threads, and closes the connection after
waiting for all of the threads to exit.

@until }
 */
