/*! @page compression Compressors

This section explains how to configure WiredTiger's builtin support for
the bzip2 and snappy compression engines.

@section compression_bzip2 Using bzip2 compression

To use the builtin support for <a href="http://www.bzip.org/">bzip2</a>
compression, first check that bzip2 is installed in include and library
directories searched by the compiler.  Once bzip2 is installed, you can
enable bzip2 using the \c --enable-bzip2 option to configure.

If bzip2 is installed in a non-standard location, you'll need to modify
the \c CPPFLAGS and \c LDFLAGS to indicate these locations.  For example,
with the bzip2 includes and libraries installed in \c /usr/local/include
and \c /usr/local/lib, you should run configure as follows:

@code
cd build_posix
../dist/configure --enable-bzip2 CPPFLAGS="-I/usr/local/include" LDFLAGS="-L/usr/local/include"
@endcode

After building, you can confirm the compressor is working by running the
compression part of the test suite:

@code
cd build_posix
python ../test/suite/run.py compress
@endcode

Review the test output to verify the bzip2 part of the test passes and
was not skipped.

@section compression_snappy Using snappy compression

To use the builtin support for Google's
<a href="http://code.google.com/p/snappy/">snappy</a> compression, first
check that snappy is installed in include and library directories
searched by the compiler.  Once snappy is installed, you can enable
snappy using the \c --enable-snappy option to configure.

If snappy is installed in a non-standard location, you'll need to modify
the \c CPPFLAGS and \c LDFLAGS to indicate these locations.  For example,
with the snappy includes and libraries installed in \c /usr/local/include
and \c /usr/local/lib, you should run configure as follows:

@code
cd build_posix
../dist/configure --enable-snappy CPPFLAGS="-I/usr/local/include" LDFLAGS="-L/usr/local/include"
@endcode

After building, you can confirm the compressor is working by running the
compression part of the test suite:

@code
cd build_posix
python ../test/suite/run.py compress
@endcode

Review the test output to verify the snappy part of the test passes and
was not skipped.

@section compression_upgrading Upgrading compression engines

WiredTiger does not store information with file blocks to identify the
compression engine used to compressed the block.  Applications wanting
to upgrade to some future compression engine (without requiring a file
dump and re-load), should ensure each compressed block includes enough
information to identify the compression engine used, so its compression
code can correctly decompress old and new blocks.

@section compression_custom Custom compression engines

WiredTiger may be extended by adding custom compression engines; see
@ref WT_COMPRESSOR for more information.

 */
