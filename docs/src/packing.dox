/*! @page packing Packing and Unpacking Data

- native C structs
- portability between programming languages

WiredTiger's data packing uses format strings similar to those specified in the
Python struct module:
  http://docs.python.org/library/struct

The first character of the format string can be used to indicate the byte
order, size and alignment of the packed data, according to the following
table:

<table>
@hrow{Character, Byte order, Size, Alignment}
@row{<tt>.</tt>, big-endian, packed, none}
@row{<tt>&gt;</tt>, big-endian, standard, none}
@row{<tt>&lt;</tt>, little-endian, standard, none}
@row{<tt>\@</tt>, native, native, native}
</table>

If the first character is not one of these, '.' (big-endian, packed) is
assumed: it naturally sorts in lexicographic order, and the packed format
uses variable-sized encoding of values to reduce the data size.

See @ref schema_types for the list of supported types.

@section config_examples Code Samples

The code below is taken from the complete example program @ex_ref{ex_pack.c}.

@dontinclude ex_pack.c
@skip struct_size
@until unpack
 */
